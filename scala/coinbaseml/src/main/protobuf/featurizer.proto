syntax = "proto3";

import "google/protobuf/empty.proto";
import "scalapb/scalapb.proto";

option (scalapb.options) = {
  scope: FILE
  preserve_unknown_fields: false
  package_name: "co.firstorderlabs.common.protos"
  flat_package: true
};

enum InfoDictKey {
    buyFeesPaid = 0;
    buyOrdersPlaced = 1;
    buyVolumeTraded = 2;
    numOrdersRejected = 3;
    portfolioValue = 4;
    sellFeesPaid = 5;
    sellOrdersPlaced = 6;
    sellVolumeTraded = 7;
}

enum RewardStrategy {
    ReturnRewardStrategy = 0;
    LogReturnRewardStrategy = 1;
}

service FeaturizerService {
    rpc getInfoDict (google.protobuf.Empty) returns (InfoDict) {
    }
    rpc getObservation (ObservationRequest) returns (Observation) {
    }
    rpc getReward (RewardRequest) returns (Reward) {
    }
}

message InfoDict {
    option (scalapb.message).type = "co.firstorderlabs.common.InfoDict";
    map<string, double> infoDict = 1;
}

message ObservationRequest {
    int32 orderBookDepth = 1;
    bool normalize = 2;
    RewardRequest rewardRequest = 3;
}

message Features {
    repeated double account = 1;
    repeated double orderBook = 2;
    repeated double timeSeries = 3;
}

message Observation {
    Features features = 1;
    Reward reward = 2;
    InfoDict infoDict = 3;
}

message RewardRequest {
    RewardStrategy rewardStrategy = 1;
}

message Reward {
    double reward = 1;
}